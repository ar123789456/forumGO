CREATE TABLE if NOT EXISTS user(
  id    INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, 
  nick  TEXT,
  name TEXT,
  passhash TEXT,
  mail TEXT,
  password TEXT,
  disabled BOOL
);

CREATE TABLE if NOT EXISTS tag(
  id    INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, 
  name  TEXT
);

CREATE TABLE if NOT EXISTS UserSession (
 SessionKey text primary key,
 UserID INTEGER NOT NULL,
 LoginTime DATETIME NOT NULL,
 LastSeenTime DATETIME NOT NULL
);

CREATE TABLE if NOT EXISTS post(
  id    INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, 
  name  TEXT,
  content TEXT,
  user_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE if NOT EXISTS post_tag(
  id integer PRIMARY KEY AUTOINCREMENT UNIQUE,
  post_id integer not NULL,
  tag_id integer not NULL,
  FOREIGN KEY (post_id) REFERENCES post(id),
  FOREIGN KEY (tag_id) REFERENCES tag(id)
);

CREATE TABLE if NOT EXISTS comment(
  id    INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, 
  content TEXT,
  post_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  FOREIGN KEY (post_id) REFERENCES post(id),
  FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE if NOT EXISTS likes_post (
  id integer PRIMARY KEY AUTOINCREMENT UNIQUE,
  post_id integer not NULL,
  user_id integer not null,
  FOREIGN KEY (post_id) REFERENCES post(id),
  FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE if NOT EXISTS dislikes_post (
  id integer PRIMARY KEY AUTOINCREMENT UNIQUE,
  post_id integer not NULL,
  user_id integer not null,
  FOREIGN KEY (post_id) REFERENCES post(id),
  FOREIGN KEY (user_id) REFERENCES user(id)
);
CREATE TABLE if NOT EXISTS likes_comment (
  id integer PRIMARY KEY AUTOINCREMENT UNIQUE,
  comment_id integer not NULL,
  user_id integer not null,
  FOREIGN KEY (comment_id) REFERENCES comment(id),
  FOREIGN KEY (user_id) REFERENCES user(id)
);
CREATE TABLE if NOT EXISTS dislikes_comment (
  id integer PRIMARY KEY AUTOINCREMENT UNIQUE,
  comment_id integer not NULL,
  user_id integer not null,
  FOREIGN KEY (comment_id) REFERENCES comment(id),
  FOREIGN KEY (user_id) REFERENCES user(id)
);